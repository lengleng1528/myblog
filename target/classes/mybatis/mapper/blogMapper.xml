<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hogwarts.blog.mapper.BlogMapper">

    <!--属性的数量也可以与实际查询出的数量不一致-->
    <resultMap id="blog" type="com.hogwarts.blog.vo.BlogQuery">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="flag" column="flag"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="updateTime" column="update_time"/>
        <result property="content" column="content"/>
        <result property="description" column="description"/>
        <result property="recommend" column="recommend"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="commentabled" column="commentabled"/>
        <association property="type" javaType="com.hogwarts.blog.pojo.Type">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
        <association property="user" javaType="com.hogwarts.blog.pojo.User">
            <id property="id" column="id"/>
            <result property="nickname" column="nickname"/>
            <result property="avatar" column="avatar"/>
        </association>

    </resultMap>



    <resultMap id="blogMap" type="com.hogwarts.blog.pojo.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="flag" column="flag"/>
        <result property="content" column="content"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>
        <result property="recommend" column="recommend"/>
        <result property="views" column="views"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="commentabled" column="commentabled"/>
        <association property="type" javaType="com.hogwarts.blog.pojo.Type">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
        <association property="user" javaType="com.hogwarts.blog.pojo.User">
            <id property="id" column="id"/>
            <result property="nickname" column="nickname"/>
            <result property="avatar" column="avatar"/>
        </association>
        <collection property="tags" ofType="com.hogwarts.blog.pojo.Tag">
            <id column="tid" property="id"/>
            <result column="tagname" property="name"/>
        </collection>

    </resultMap>

    <!--查询全部文章列表-->
    <select id="findAll" resultMap="blog">
            SELECT b.id,b.title,b.update_time,b.description,b.recommend,b.published,b.views,b.type_id tid,t.name,b.user_id uid,u.avatar,u.nickname FROM t_blog b
            LEFT OUTER JOIN
              t_type t ON b.type_id = t.id
            LEFT OUTER JOIN
               t_user u ON b.user_id = u.id
            ORDER BY b.update_time DESC
    </select>


    <select id="findBlogByVo" resultMap="blog" parameterType="com.hogwarts.blog.vo.BlogSearch" >
        <bind name="title" value="'%' + title + '%'" />
        select b.id,b.title,b.update_time,b.recommend,b.published,t.name from t_blog b
        inner join
        t_type t on b.type_id = t.id
        <where>
            <if test="title !=null and title != '' ">
                and b.title like #{title}
            </if>
            <if test="typeId != null">
                /*必须是表中的名，不能是别名*/
                and b.type_id = #{typeId}
            </if>
            <if test="recommend != false">
                and b.recommend = #{recommend}
            </if>
        </where>
        /*order by b.update_time desc*/
    </select>

    <!--查询id文章列表，查询出对应的type-->
    <select id="findById1" resultMap="blog" parameterType="java.lang.Long">
        select b.id,b.title,b.flag,b.content,b.first_picture,b.description,b.recommend,b.share_statement,b.appreciation,b.commentabled,b.type_id tid,t.name from t_blog b left outer join
        t_type t on b.type_id = t.id where b.id=#{id}
    </select>


    <!--查询id文章列表，查询出对应的tags-->
    <select id="findById" resultMap="blogMap" parameterType="java.lang.Long">
        SELECT b.id,b.title,b.flag,b.content,b.first_picture,b.description,b.recommend,b.share_statement,b.appreciation,b.commentabled,b.views,b.update_time,t.id tid,t.name tagname,u.avatar,u.nickname
          FROM t_blog b
          INNER JOIN
            t_blog_tags bt ON(b.id = bt.blogs_id )
          INNER JOIN
            t_tag t ON t.id = bt.tags_id
          INNER JOIN
            t_user u ON u.id = b.user_id
          WHERE b.id=#{id}
    </select>


    <!--查询推荐博客top-->
    <select id="listRecommendBlogTop" resultMap="blog" parameterType="java.lang.Integer">
          SELECT id,title,`update_time`
          FROM`t_blog` WHERE `recommend`= b'1'
          ORDER BY `update_time` DESC
          LIMIT #{size}
    </select>

    <!--查询博客总数-->
    <select id="count" resultType="java.lang.Integer">
        select count(*) from t_blog
    </select>


    <!--根据tagId查询-->
    <select id="findBlogByTagId" resultMap="blogMap" parameterType="java.lang.Long">
        SELECT b.id,b.title,b.update_time,b.recommend,b.published,b.views,t.id tid,t.name tagname FROM t_blog b
            INNER JOIN t_blog_tags bt ON(b.id = bt.blogs_id )
            INNER JOIN
            t_tag t ON t.id = bt.tags_id
            where bt.tags_id =#{id}
    </select>


    <!--根据typeId查询-->
    <select id="findBlogByTypeId" resultMap="blog" parameterType="java.lang.Long">
        SELECT b.id,b.title,b.update_time,b.description,b.`first_picture`,b.views,t.name,u.`avatar`,u.`nickname` FROM t_blog b
            INNER JOIN
            t_type t ON t.id = b.type_id
            INNER JOIN
            t_user u ON u.id = b.user_id
            where t.id =#{id}
    </select>


    <select id="findGroupYear" resultType="java.lang.String">
      SELECT YEAR(`update_time`),COUNT(*) FROM `t_blog`
      GROUP BY  YEAR(update_time)
    </select>


    <select id="findByYear" resultMap="blogMap" parameterType="java.lang.String">
      SELECT `id`,`title`,`update_time`,`flag` FROM `t_blog` WHERE YEAR(`update_time`)= #{update_year}
    </select>

    <!--查询最新发布的博客-->
    <select id="getNewBlogs" resultMap="blog" parameterType="java.lang.Integer">
      SELECT `id`,`title` FROM `t_blog`
      ORDER BY  update_time DESC
      LIMIT #{count}
    </select>



</mapper>